[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://b5jlyqkcro0uk"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0ucbc"]
source = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_f4cng"]
operator = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sw237"]
constant = 1.0

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4u4o4"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_gmyq3"]
parameter_name = "WaterColor"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_6p72m"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vqscd"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_fqf7k"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_oie2d"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tvl5h"]
parameter_name = "ReflectionLimit"
hint = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 WaterColor : source_color;
uniform float ReflectionLimit : hint_range(0, 1);
uniform sampler2D screen_tex_frg_10 : hint_screen_texture;



void fragment() {
// ColorParameter:14
	vec4 n_out14p0 = WaterColor;


// Input:4
	vec2 n_out4p0 = UV;


// VectorDecompose:5
	float n_out5p0 = vec3(n_out4p0, 0.0).x;
	float n_out5p1 = vec3(n_out4p0, 0.0).y;
	float n_out5p2 = vec3(n_out4p0, 0.0).z;


// FloatParameter:9
	float n_out9p0 = ReflectionLimit;


// FloatConstant:12
	float n_out12p0 = 1.000000;


// FloatOp:11
	float n_out11p0 = n_out12p0 - n_out5p1;


// Mix:17
	float n_in17p0 = 0.00000;
	float n_out17p0 = mix(n_in17p0, n_out9p0, n_out11p0);


// VectorCompose:6
	vec2 n_out6p0 = vec2(n_out5p0, n_out17p0);


	vec4 n_out10p0;
// Texture2D:10
	n_out10p0 = texture(screen_tex_frg_10, n_out6p0);


// Mix:13
	vec4 n_out13p0 = mix(n_out14p0, n_out10p0, vec4(n_out11p0));


// Output:0
	COLOR.rgb = vec3(n_out13p0.xyz);


}
"
graph_offset = Vector2(-1001.93, -52.7833)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(860, 300)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_vqscd")
nodes/fragment/4/position = Vector2(-1500, 380)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorDecompose_fqf7k")
nodes/fragment/5/position = Vector2(-1100, 360)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorCompose_oie2d")
nodes/fragment/6/position = Vector2(-40, 260)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_tvl5h")
nodes/fragment/9/position = Vector2(-660, 60)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture_0ucbc")
nodes/fragment/10/position = Vector2(200, 260)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_f4cng")
nodes/fragment/11/position = Vector2(-540, 500)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_sw237")
nodes/fragment/12/position = Vector2(-740, 460)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_4u4o4")
nodes/fragment/13/position = Vector2(439.105, 330.352)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorParameter_gmyq3")
nodes/fragment/14/position = Vector2(180, 0)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_6p72m")
nodes/fragment/17/position = Vector2(-320, 100)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 6, 0, 10, 0, 5, 1, 11, 1, 12, 0, 11, 0, 10, 0, 13, 1, 11, 0, 13, 2, 13, 0, 0, 0, 14, 0, 13, 0, 11, 0, 17, 2, 17, 0, 6, 1, 5, 0, 6, 0, 9, 0, 17, 1)
